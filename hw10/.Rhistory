#Calculate LRT statistic
x2 = as.numeric(2*(logLik(m.cat) - logLik(m)))
return(c(lr = x2))
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_4b')) {
#Perform the bootstrap
bag_4b = bootMer(roast_fit_null, lr, nsim = 2000)
}
bag_df <- as.data.frame(bag_4b)
#Now find the p-value
bag_df$lr[bag_df$lr<0] = 0.0
pval = mean(bag_df$lr >= bag_4b$t0["lr"])
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$lr, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=2), add = T, n = 100)
bag_4b$t0
View(bag_df)
#Problem 4a
roast_fit_null <- lmer(cooktime ~ temperature + pan + (1|day), data = potroast_num, REML = FALSE)
roast_fit_alt <- lmer(cooktime ~ as.factor(temperature) + pan + (1|day), data = potroast_num, REML = FALSE)
#LRT with ChiSq test statistic
anova(roast_fit_null, roast_fit_alt)
#Problem 4b
#Define likelihood ratio function
lr = function(m){
#Change to categorical
m.cat = with(m@frame, lmer(cooktime ~ as.factor(temperature) + pan + (1|day), REML=FALSE))
#Calculate LRT statistic
x2 = as.numeric(2*(logLik(m.cat) - logLik(m)))
return(c(lr = x2))
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_4b')) {
#Perform the bootstrap
bag_4b = bootMer(roast_fit_null, lr, nsim = 2000)
}
bag_df <- as.data.frame(bag_4b)
#Now find the p-value
bag_df$lr[bag_df$lr<0] = 0.0
pval = mean(bag_df$lr >= bag_4b$t0["lr"])
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$lr, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=2), add = T, n = 100)
rm(bag_4b)
#Problem 4b
#Define likelihood ratio function
lr = function(m){
#Change to categorical
m.cat = with(m@frame, lmer(cooktime ~ as.factor(temperature) + pan + (1|day), REML=FALSE))
#Calculate LRT statistic
x2 = as.numeric(2*(logLik(m.cat) - logLik(m)))
return(c(lr = x2))
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_4b')) {
#Perform the bootstrap
bag_4b = bootMer(roast_fit_null, lr, nsim = 2000)
}
bag_df <- as.data.frame(bag_4b)
#Now find the p-value
bag_df$lr[bag_df$lr<0] = 0.0
pval = mean(bag_df$lr >= bag_4b$t0["lr"])
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$lr, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
#Problem 4c
#Approximate F test
anova(roast_fit_null)
#Problem 4b
#Define likelihood ratio function
lr = function(m){
#Change to categorical
m.cat = with(m@frame, lmer(cooktime ~ as.factor(temperature) + pan + (1|day), REML=FALSE))
#Calculate LRT statistic
x2 = as.numeric(2*(logLik(m.cat) - logLik(m)))
return(c(lr = x2))
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_4b')) {
#Perform the bootstrap
bag_4b = bootMer(roast_fit_null, lr, nsim = 2000)
}
bag_df <- as.data.frame(bag_4b)
#Now find the p-value
bag_df$lr[bag_df$lr<0] = 0.0
pval = mean(bag_df$lr >= bag_4b$t0["lr"])
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$lr, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=2), add = T, n = 100)
#Problem 4c
#Approximate F test
anova(roast_fit_null)
anova(roast_fit_alt)
anova(roast_fit_alt, roast_fit_null)
View(null_model)
summary(null_model)
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = TRUE)
#Return the LRT statistic
return(ranova(alt_model)$LRT[2])
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
View(x)
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potraost_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
rm('bag_c')
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potraost_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
View(bag_df)
logLik(alt_model)
logLile(null_modle_fit)
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
View(bag_df)
rm('bag_c')
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
oneX2(1)
oneX2(2)
oneX2(77)
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
exists('bag_c')
View(bag_df)
lsmeans?
edn
?lsmeans
#Problem 2b
roast_fit <- lm(cooktime ~ temperature, data = potroast)
summary(lsmeans(roast_fit, pairwise ~ temperature))
#Problem 2b
roast_fit <- lm(cooktime ~ temperature, data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
#Problem 2b
roast_fit <- lm(cooktime ~ temperature*pan, data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
qt(2.506, df = 3.86)
pt(2.506, df=3.86)
11/4.39
dt(2.506)
pt(0.2021)
pt(0.2021, df = 3.86)
dt(2.506, df = 3.86)
pt(2.506, df = 3.86)
1-pt(2.506, df = 3.86)
pt(0, df = 5)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
roast_fit_aov <- aov(cooktime ~ temperature*pan + (1|day), data = potroast)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
TukeyHSD(roast_fit)
#Problem 2b
roast_fit <- lmer(cooktime ~ temperature*pan + (1|day), data = potroast)
lsmeans(roast_fit, pairwise ~ temperature)
rm('bag_c')
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
x2 = ranova(alt_model)$LRT
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
View(bag_df)
curve(dchisq(x,df=1), add = T, n = 100)
rm('bag_c')
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
x2 = ranova(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
x2 = ranova(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
rm()
rm('bag_c')
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
x2 = ranova(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:50,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
x2 = ranova(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:2000,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
rm('bag_c')
#Problem 3c
#Define bootstrap function
oneX2 = function(x){
#Define null model to generate data
null_model = lm(cooktime ~ temperature*pan, data = potroast_num)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = lmer(y ~ temperature*pan + (1|day), data = potroast_num, REML = FALSE)
null_model_fit = lm(y ~ temperature*pan, data = potroast_num)
#Return the LRT statistic
x2 = as.numeric(2*(logLik(alt_model) - logLik(null_model_fit)))
x2 = ranova(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_c')) {
#Perform the bootstrap
bag_c = unlist(parallel::mclapply(1:2000,oneX2))
}
bag_df <- as.data.frame(bag_c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_c<0] = 0.0
pval = mean(bag_df$bag_c >= 9.7877)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
