e^(1.1)
exp(1.1)
log(10)/2
#Problem 2
Fpower <- function(n,v){
#Calculate noncentral parameter
noncentralp = v*n*(exp(1.1)^2)/(2*(0.77+0.02*n))
#Find F that would cause us to reject at 0.95 percent
rejectionf = qf(0.95,1,v-1)
#calculate power
power = pf(rejectionf, 1, v-1, ncp = noncentralp, lower.tail = FALSE)
return(power)
}
#This calculates the power for a bunch of different n,v combinations
n = seq(from = 1, to = 500)
v = seq(from = 2, to = 4)
df = expand.grid(v,n) %>%
rename(v = Var1, n = Var2) %>%
mutate(power = Fpower(n,v))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(car)
library(ggplot2)
library(MASS)
library(lme4)
library(lmerTest)
library(tidyr)
library(cowplot)
library(multcomp)
set.seed(1104)             # make random results reproducible
this_file <- "kerr_stat850_hw08.Rmd"  # used to automatically generate code appendix
#Problem 1b
#Load in the data
cholesterol <- read.csv("~/2019spring/STAT850/hw8/cholesterol.csv")
cholesterol$patient = factor(cholesterol$patient)
cholesterol$run = factor(cholesterol$run)
#Fit the data (fixed for ANOVA table)
cholesterol_fixed <- lm(cholesterol ~ patient/run, data = cholesterol)
cholesterol_lmer <- lmer(cholesterol ~ 1 + (1|patient/run), data = cholesterol)
anova(cholesterol_fixed)
summary(cholesterol_lmer)
#Problem 2
Fpower <- function(n,v){
#Calculate noncentral parameter
noncentralp = v*n*(exp(1.1)^2)/(2*(0.77+0.02*n))
#Find F that would cause us to reject at 0.95 percent
rejectionf = qf(0.95,1,v-1)
#calculate power
power = pf(rejectionf, 1, v-1, ncp = noncentralp, lower.tail = FALSE)
return(power)
}
#This calculates the power for a bunch of different n,v combinations
n = seq(from = 1, to = 500)
v = seq(from = 2, to = 4)
df = expand.grid(v,n) %>%
rename(v = Var1, n = Var2) %>%
mutate(power = Fpower(n,v))
#Remove values of n & v that have too low of power and high power, return head
kable(filter(df, power >= 0.7 & power <= 0.85) %>% arrange(-power) %>% head())
#Problem 2
Fpower <- function(n,v){
#Calculate noncentral parameter
noncentralp = v*n*(log(10)^2)/(2*(0.77+0.02*n))
#Find F that would cause us to reject at 0.95 percent
rejectionf = qf(0.95,1,v-1)
#calculate power
power = pf(rejectionf, 1, v-1, ncp = noncentralp, lower.tail = FALSE)
return(power)
}
#This calculates the power for a bunch of different n,v combinations
n = seq(from = 1, to = 500)
v = seq(from = 2, to = 4)
df = expand.grid(v,n) %>%
rename(v = Var1, n = Var2) %>%
mutate(power = Fpower(n,v))
#Remove values of n & v that have too low of power and high power, return head
kable(filter(df, power >= 0.7 & power <= 0.85) %>% arrange(-power) %>% head())
#Problem 2
Fpower <- function(n,v){
#Calculate noncentral parameter
noncentralp = v*n*(exp(1.1)^2)/(2*(0.77+0.02*n))
#Find F that would cause us to reject at 0.95 percent
rejectionf = qf(0.95,1,v-1)
#calculate power
power = pf(rejectionf, 1, v-1, ncp = noncentralp, lower.tail = FALSE)
return(power)
}
#This calculates the power for a bunch of different n,v combinations
n = seq(from = 1, to = 500)
v = seq(from = 2, to = 10)
df = expand.grid(v,n) %>%
rename(v = Var1, n = Var2) %>%
mutate(power = Fpower(n,v))
#Remove values of n & v that have too low of power and high power, return head
kable(filter(df, power >= 0.7 & power <= 0.85) %>% arrange(-power) %>% head())
#Problem 2
Fpower <- function(n,v){
#Calculate noncentral parameter
noncentralp = v*n*(log(10)^2)/(2*(0.77+0.02*n))
#Find F that would cause us to reject at 0.95 percent
rejectionf = qf(0.95,1,v-1)
#calculate power
power = pf(rejectionf, 1, v-1, ncp = noncentralp, lower.tail = FALSE)
return(power)
}
#This calculates the power for a bunch of different n,v combinations
n = seq(from = 1, to = 500)
v = seq(from = 2, to = 4)
df = expand.grid(v,n) %>%
rename(v = Var1, n = Var2) %>%
mutate(power = Fpower(n,v))
#Remove values of n & v that have too low of power and high power, return head
kable(filter(df, power >= 0.7 & power <= 0.85) %>% arrange(-power) %>% head())
