#plot dataset
p3_plot(p3_3, "Problem 3a, Part ii")
#Fit the data sets
p3_3f1 <- glm(y ~ x, family="poisson", data = p3_3)
p3_3f2 <- glm(y ~ x + f, family="poisson", data = p3_3)
#Problem 3b
m0 <- glmer(y ~ x + (1|f), family="poisson", data=p3_3)
m1 <- glmer(y ~ x + (1|f) + (1|obs), family="poisson", data=p3_3)
#Perform LRT
drop1(m0, test = "Chisq")
drop1(m1, test = "Chisq")
#Problem 3c
lr = function(m){
#Drop x
m.no_x = update(m, . ~ . -x)
#Calculate LRT statistic
x2 = as.numeric(2*(logLik(m.no_x) - logLik(m)))
return(c(lr = x2))
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = bootMer(m1, lr, nsim = 2000)
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$lr[bag_df$lr<0] = 0.0
pval = mean(bag_df$lr >= bag_3c$t0["lr"])
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$lr, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=2), add = T, n = 100)
## repeat many times
rr = replicate(100, cfun(simfun(ng=4, nr=10, fsd=0, indsd=0, b=c(1,2))))
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
View(rr)
remove(bag_3c)
#Problem 3c
lr = function(m){
#Drop x
m.no_x = update(m, . ~ . -x)
#Calculate LRT statistic
x2 = as.numeric(2*(-logLik(m.no_x) + logLik(m)))
return(c(lr = x2))
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = bootMer(m1, lr, nsim = 2000)
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$lr[bag_df$lr<0] = 0.0
pval = mean(bag_df$lr >= bag_3c$t0["lr"])
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$lr, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=2), add = T, n = 100)
## repeat many times
rr = replicate(100, cfun(simfun(ng=4, nr=10, fsd=0, indsd=0, b=c(1,2))))
View(rr)
## Problem 3a, part iii
set.seed(12345)
#simulate data set
p3_3 = simfun(ng=4, nr=10, fsd=1, indsd=0.5, b=c(1,2))
#plot dataset
p3_plot(p3_3, "Problem 3a, Part ii")
#Fit the data sets
p3_3f1 <- glm(y ~ x, family="poisson", data = p3_3)
p3_3f2 <- glm(y ~ x + f, family="poisson", data = p3_3)
p3_3f3 <- glm(y ~ x + f, family="quasipoisson", data=p3_3)
summary(p3_3f3)
p3_3f3$coefficients
p3_3f3$residuals
p3_3f3$null.deviance
View(p3_3f3)
## Problem 3a, part i
set.seed(12345)
#simulate data set
p3_1 = simfun(ng=4, nr=10, fsd=0, indsd=0, b=c(1,2))
#plot dataset
p3_plot(p3_1, "Problem 3a, Part i")
#Fit the data sets
p3_1f1 <- glm(y ~ x, family="quasipoisson", data = p3_1)
p3_1f2 <- glm(y ~ x + f, family="quasipoisson", data = p3_1)
#Look at the fits
summary(p3_1f1)
summary(p3_1f2)
## Problem 3a, part ii
set.seed(12345)
#simulate data set
p3_2 = simfun(ng=4, nr=10, fsd=1, indsd=0, b=c(1,2))
#plot dataset
p3_plot(p3_2, "Problem 3a, Part ii")
#Fit the data sets
p3_2f1 <- glm(y ~ x, family="quasipoisson", data = p3_2)
p3_2f2 <- glm(y ~ x + f, family="quasipoisson", data = p3_2)
#Look at the fits
summary(p3_2f1)
summary(p3_2f2)
## Problem 3a, part iii
set.seed(12345)
#simulate data set
p3_3 = simfun(ng=4, nr=10, fsd=1, indsd=0.5, b=c(1,2))
#plot dataset
p3_plot(p3_3, "Problem 3a, Part ii")
#Fit the data sets
p3_3f1 <- glm(y ~ x, family="quasipoisson", data = p3_3)
p3_3f2 <- glm(y ~ x + f, family="quasipoisson", data = p3_3)
#Look at the fits
summary(p3_3f1)
summary(p3_3f2)
#Problem 3b
m0 <- glmer(y ~ x + (1|f), family="poisson", data=p3_3)
m1 <- glmer(y ~ x + (1|f) + (1|obs), family="poisson", data=p3_3)
#Perform LRT
drop1(m0, test = "Chisq")
x = drop1(m1, test = "Chisq")
x$LRT
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(y ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:2000,oneX2))
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$bag_c[bag_df$bag_3c<0] = 0.0
rm(bag_3c)
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
y = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(y ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:2000,oneX2))
}
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
simy = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(simy ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model)$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:2000,oneX2))
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$bag_3c[bag_df$bag_3c<0] = 0.0
pval = mean(bag_df$bag_3c >= 257.73)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_3c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(car)
library(ggplot2)
library(MASS)
library(lme4)
library(lmerTest)
#library(tidyr)
#library(cowplot)
#library(multcomp)
#library(lsmeans)
set.seed(1104)             # make random results reproducible
this_file <- "kerr_stat850_hw11.Rmd"  # used to automatically generate code appendix
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
View(rr)
cfun(simfun())
varCorr(m1)
VarCorr(m1)
fixef(m1)
View(p3_3)
mean(rr$x)
rr
rr$x
rr$[,x]
rr$,x
View(rr)
rr[1]
rr[1,1]
rr[1,2]
rr[4,]
mean(rr[4,])
View(rr)
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
#Actual effects
obs_eff_real <- 0.5
group_eff_real <- 1.0
int_eff_real <- 1.0
x_eff_real <- 2.0
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
eff_mean <- rbind(obs_eff_mean, group_eff_mean, int_eff_mean, x_eff_mean)
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
eff_var <- rbind(obs_eff_var, group_eff_var, int_eff_var, x_eff_var)
#Actual effects
obs_eff_real <- 0.5
group_eff_real <- 1.0
int_eff_real <- 1.0
x_eff_real <- 2.0
eff_real <- rbind(obs_eff_real, group_eff_real, int_eff_real, x_eff_real)
#cbind for table
3d_table <- cbind(eff_real,eff_mean,eff_var)
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
eff_mean <- rbind(obs_eff_mean, group_eff_mean, int_eff_mean, x_eff_mean)
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
eff_var <- rbind(obs_eff_var, group_eff_var, int_eff_var, x_eff_var)
#Actual effects
obs_eff_real <- 0.5
group_eff_real <- 1.0
int_eff_real <- 1.0
x_eff_real <- 2.0
eff_real <- rbind(obs_eff_real, group_eff_real, int_eff_real, x_eff_real)
#cbind for table
p3d_table <- cbind(eff_real,eff_mean,eff_var)
kable(p3d_table)
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
eff_mean <- rbind(obs_eff_mean, group_eff_mean, int_eff_mean, x_eff_mean)
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
eff_var <- rbind(obs_eff_var, group_eff_var, int_eff_var, x_eff_var)
#Actual effects
obs_eff_real <- 0.5
group_eff_real <- 1.0
int_eff_real <- 1.0
x_eff_real <- 2.0
eff_real <- rbind(obs_eff_real, group_eff_real, int_eff_real, x_eff_real)
#cbind for table
p3d_table <- cbind(eff_real,eff_mean,eff_var)
kable(p3d_table,
row.names = c("Observation RE","Group RE","Intercept FE","Slope FE"),
col.names = c("Actual","Mean","Variance"))
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
eff_mean <- rbind(obs_eff_mean, group_eff_mean, int_eff_mean, x_eff_mean)
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
eff_var <- rbind(obs_eff_var, group_eff_var, int_eff_var, x_eff_var)
#Actual effects
obs_eff_real <- 0.5
group_eff_real <- 1.0
int_eff_real <- 1.0
x_eff_real <- 2.0
eff_real <- rbind(obs_eff_real, group_eff_real, int_eff_real, x_eff_real)
#cbind for table
p3d_table <- cbind(eff_real,eff_mean,eff_var)
kable(p3d_table,
row.names = FALSE,
col.names = c("Actual","Mean","Variance"),
digits = 3)
# Problem 3d
## repeat many times
rr = replicate(100, cfun(simfun()))
#Find means
obs_eff_mean <- mean(rr[1,])
group_eff_mean <- mean(rr[2,])
int_eff_mean <- mean(rr[3,])
x_eff_mean <- mean(rr[4,])
eff_mean <- rbind(obs_eff_mean, group_eff_mean, int_eff_mean, x_eff_mean)
#Find variance
obs_eff_var <- var(rr[1,])
group_eff_var <- var(rr[2,])
int_eff_var <- var(rr[3,])
x_eff_var <- var(rr[4,])
eff_var <- rbind(obs_eff_var, group_eff_var, int_eff_var, x_eff_var)
#Actual effects
obs_eff_real <- 0.5
group_eff_real <- 1.0
int_eff_real <- 1.0
x_eff_real <- 2.0
eff_real <- rbind(obs_eff_real, group_eff_real, int_eff_real, x_eff_real)
#cbind for table
p3d_table <- cbind(eff_real,eff_mean,eff_var)
rownames(p3d_table) <- c("Observation RE","Group RE","Intercept FE","Slope FE")
kable(p3d_table,
row.names = TRUE,
col.names = c("Actual","Mean","Variance"),
digits = 3)
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
simy = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(simy ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model, test="Chisq")$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:2000,oneX2))
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$bag_3c[bag_df$bag_3c<0] = 0.0
pval = mean(bag_df$bag_3c >= 257.73)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_3c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
rm(bag_3c)
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
simy = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(simy ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model, test="Chisq")$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:2000,oneX2))
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$bag_3c[bag_df$bag_3c<0] = 0.0
pval = mean(bag_df$bag_3c >= 257.73)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_3c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
simy = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(simy ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model, test="Chisq")$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:4000,oneX2))
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$bag_3c[bag_df$bag_3c<0] = 0.0
pval = mean(bag_df$bag_3c >= 257.73)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_3c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
rm(bag_3c)
#Problem 3c
oneX2 = function(x){
#Define null model to generate data
null_model = glmer(y ~ 1 + (1|f) + (1|obs), family="poisson", data = p3_3)
simy = simulate(null_model)$sim_1
#Make alternative model from data simulated by null
alt_model = glmer(simy ~ x + (1|f) + (1|obs), family="poisson", data = p3_3)
#Return the LRT statistic
x2 = drop1(alt_model, test="Chisq")$LRT[2]
return(x2)
}
#Now, perform bootstrap
set.seed(4)
if (!exists('bag_3c')) {
#Perform the bootstrap
bag_3c = unlist(parallel::mclapply(1:4000,oneX2))
}
bag_df <- as.data.frame(bag_3c)
#Now find the p-value
bag_df$bag_3c[bag_df$bag_3c<0] = 0.0
pval = mean(bag_df$bag_3c >= 257.73)
paste("The p-value for the parametric bootstrap test is: ",pval)
#Plot the null distribution
hist(bag_df$bag_3c, freq = FALSE, breaks = 30, xlab = "-2 loglik ratio", main = "")
curve(dchisq(x,df=1), add = T, n = 100)
#Problem 3b
m0 <- glmer(y ~ x + (1|f), family="poisson", data=p3_3)
m1 <- glmer(y ~ x + (1|f) + (1|obs), family="poisson", data=p3_3)
#Perform LRT
drop1(m0, test = "Chisq")
drop1(m1, test = "Chisq")
